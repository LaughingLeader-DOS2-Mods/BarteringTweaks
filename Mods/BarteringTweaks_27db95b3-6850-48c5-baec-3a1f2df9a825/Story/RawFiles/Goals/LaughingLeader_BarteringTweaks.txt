Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION START
IF
GameEventSet("GAMEEVENT_GameStarted")
THEN
DB_LLBARTER_StoryStarted(1);

IF
SavegameLoaded(_,_,_,_)
AND
DB_StoryStarted(_)
THEN
DB_LLBARTER_StoryStarted(1);

IF
DB_LLBARTER_StoryStarted(1)
THEN
DebugBreak("[LaughingLeader_BarteringTweaks] Starting Bartering Tweaks.");
//END_REGION

//REGION QUERIES
QRY
LLBARTER_QRY_HasStatus((CHARACTERGUID)_Player, (STRING)_Status)
AND
HasActiveStatus(_Player, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLBARTER_QRY_HasStatus((CHARACTERGUID)_Player, (STRING)_Status)
AND
HasAppliedStatus(_Player, _Status, 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION BARTER_SHARING
IF
DialogStarted(_Dialog, _Instance)
AND
NOT GlobalGetFlag("LLBARTER_BarterSharingDisabled", 1)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_NPC)
AND
CharacterCanTrade(_NPC, 1)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
THEN
LLBARTER_SetHighestBarter();
ProcObjectTimer(_Player, "LLBARTER_SetBarterBoost", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_SetBarterBoost")
AND
DB_LLBARTER_Temp_HighestBarter(_HighestPlayer, _Bonus)
AND
_Bonus > 0
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
LLBARTER_ApplyBarterBonusToUser(_UserID, _Bonus);
UserSetFlag(_Player, "LLBARTER_BarterBonusApplied", 0);

QRY
LLBARTER_QRY_SetHighestBarter()
THEN
LLBARTER_SetHighestBarter();

PROC
LLBARTER_SetHighestBarter()
AND
DB_LLBARTER_Temp_HighestBarter(_HighestPlayer, _Bonus)
THEN
NOT DB_LLBARTER_Temp_HighestBarter(_HighestPlayer, _Bonus);

PROC
LLBARTER_SetHighestBarter()
THEN
DB_LLBARTER_Temp_HighestBarter(NULL_00000000-0000-0000-0000-000000000000, 0);
IterateParties("LLBARTER_CheckBartering");

IF
StoryEvent((CHARACTERGUID)_Player, "LLBARTER_CheckBartering")
AND
CharacterGetAbility(_Player, "Barter", _Barter)
AND
_Barter > 0
AND
DB_LLBARTER_Temp_HighestBarter(_OtherPlayer, _HighestBarter)
AND
_Barter > _HighestBarter
THEN
NOT DB_LLBARTER_Temp_HighestBarter(_OtherPlayer, _HighestBarter);
DB_LLBARTER_Temp_HighestBarter(_Player, _Barter);

PROC
LLBARTER_ApplyBarterBonusToUser((INTEGER)_UserID, (INTEGER)_TargetVal)
AND
DB_IsPlayer(_Player)
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
LLBARTER_ApplyBarterBonus(_Player, _TargetVal);

PROC
LLBARTER_ApplyBarterBonus((CHARACTERGUID)_Player, (INTEGER)_TargetVal)
AND
CharacterGetAbility(_Player, "Barter", _CurrentVal)
AND
_TargetVal > _CurrentVal
AND
_TargetVal > 0
AND
IntegerSubtract(_TargetVal, _CurrentVal, _BonusVal)
AND
_BonusVal > 0
THEN
SetVarInteger(_Player, "LLBARTER_BarterBonus", _BonusVal);
SetStoryEvent(_Player, "LLBARTER_Commands_ApplyBarteringBonus");

IF
DialogEnded(_Dialog, _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
UserGetFlag(_Player, "LLBARTER_BarterBonusApplied", 1)
THEN
ProcObjectTimer(_Player, "LLBARTER_RemoveBarterBonusFromUserCharaters", 250);
UserClearFlag(_Player, "LLBARTER_BarterBonusApplied", 0);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_UserPlayer, "LLBARTER_RemoveBarterBonusFromUserCharaters")
AND
CharacterGetReservedUserID(_UserPlayer, _UserID)
AND
DB_IsPlayer(_Player)
AND
CharacterGetReservedUserID(_Player, _UserID)
AND
NOT DB_DialogPlayers(_, _Player, _)
AND
LLBARTER_QRY_HasStatus(_Player, "LLBARTER_BARTERBONUS")
THEN
RemoveStatus(_Player, "LLBARTER_BARTERBONUS");
//END_REGION

//REGION PERSUASION_SHARING
PROC
StartTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
NOT GlobalGetFlag("LLBARTER_PersuasionSharingDisabled", 1)
THEN
LLBARTER_SetHighestPersuasion();
ProcObjectTimer(_Player, "LLBARTER_SetPersuasionBoost", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_SetPersuasionBoost")
AND
DB_LLBARTER_Temp_HighestPersuasion(_HighestPlayer, _Bonus)
AND
_Bonus > 0
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
LLBARTER_ApplyPersuasionBonusToUser(_UserID, _Bonus);
UserSetFlag(_Player, "LLBARTER_PersuasionBonusApplied");

QRY
LLBARTER_QRY_SetHighestPersuasion()
THEN
LLBARTER_SetHighestPersuasion();

PROC
LLBARTER_SetHighestPersuasion()
AND
DB_LLBARTER_Temp_HighestPersuasion(_HighestPlayer, _Bonus)
THEN
NOT DB_LLBARTER_Temp_HighestPersuasion(_HighestPlayer, _Bonus);

PROC
LLBARTER_SetHighestPersuasion()
THEN
DB_LLBARTER_Temp_HighestPersuasion(NULL_00000000-0000-0000-0000-000000000000, 0);
IterateParties("LLBARTER_CheckPersuasion");

IF
StoryEvent((CHARACTERGUID)_Player, "LLBARTER_CheckPersuasion")
AND
CharacterGetAbility(_Player, "Persuasion", _Bonus)
AND
_Bonus > 0
AND
DB_LLBARTER_Temp_HighestPersuasion(_OtherPlayer, _HighestBonus)
AND
_Bonus > _HighestBonus
THEN
NOT DB_LLBARTER_Temp_HighestPersuasion(_OtherPlayer, _HighestBonus);
DB_LLBARTER_Temp_HighestPersuasion(_Player, _Bonus);

PROC
LLBARTER_ApplyPersuasionBonusToUser((INTEGER)_UserID, (INTEGER)_TargetVal)
AND
DB_IsPlayer(_Player)
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
LLBARTER_ApplyPersuasionBonus(_Player, _TargetVal);

PROC
LLBARTER_ApplyPersuasionBonus((CHARACTERGUID)_Player, (INTEGER)_TargetVal)
AND
CharacterGetAbility(_Player, "Persuasion", _CurrentVal)
AND
_TargetVal > _CurrentVal
AND
_TargetVal > 0
AND
IntegerSubtract(_TargetVal, _CurrentVal, _BonusVal)
THEN
SetVarInteger(_Player, "LLBARTER_PersuasionBonus", _BonusVal);
SetStoryEvent(_Player, "LLBARTER_Commands_ApplyPersuasionBonus");

IF
TradeEnds(_UserPlayer, _Trader)
AND
UserGetFlag(_UserPlayer, "LLBARTER_PersuasionBonusApplied", 1)
AND
CharacterGetReservedUserID(_UserPlayer, _UserID)
AND
DB_IsPlayer(_Player)
AND
CharacterGetReservedUserID(_Player, _UserID)
AND
LLBARTER_QRY_HasStatus(_Player, "LLBARTER_PERSUASIONBONUS")
THEN
RemoveStatus(_Player, "LLBARTER_PERSUASIONBONUS");

IF
TradeEnds(_Player, _Trader)
AND
UserGetFlag(_Player, "LLBARTER_PersuasionBonusApplied", 1)
THEN
UserClearFlag(_Player, "LLBARTER_PersuasionBonusApplied", 0);
//END_REGION

//REGION ATTITUDE_BONUS_SHARING
PROC
StartTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
GlobalGetFlag("LLBARTER_AttitudeSharingEnabled", 1)
AND
CharacterGetAttitudeTowardsPlayer(_Trader, _Player, _Attitude)
AND
DB_IsPlayer(_OtherPlayer)
AND
_Player != _OtherPlayer
AND
NOT LLBARTER_QRY_AttitudeBoostActive(_OtherPlayer)
AND
CharacterGetAttitudeTowardsPlayer(_Trader, _OtherPlayer, _OtherAttitude)
AND
_OtherAttitude > _Attitude
AND
IntegerSubtract(_OtherAttitude, _Attitude, _AttitudeBoost)
AND
_AttitudeBoost > 0
THEN
SetVarInteger(_Player, "LLBARTER_AttitudeBoost", _AttitudeBoost);

QRY
LLBARTER_QRY_AttitudeBoostActive((CHARACTERGUID)_Player)
AND
ObjectGetFlag(_Player, "LLBARTER_AttitudeBoostActive", 1)
THEN
DB_NOOP(1);

PROC	
StartTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
ObjectGetFlag(_Player, "LLBARTER_AttitudeBoostActive", 0)
AND
GetVarInteger(_Player, "LLBARTER_AttitudeBoost", _AttitudeBoost)
AND
_AttitudeBoost > 0
THEN
CharacterAddAttitudeTowardsPlayer(_Trader, _Player, _AttitudeBoost);
ObjectSetFlag(_Player, "LLBARTER_AttitudeBoostActive");

IF
TradeEnds(_Player, _Trader)
AND
ObjectGetFlag(_Player, "LLBARTER_AttitudeBoostActive", 1)
AND
CharacterGetAttitudeTowardsPlayer(_Trader, _Player, _Attitude)
AND
_Attitude > 0
AND
GetVarInteger(_Player, "LLBARTER_AttitudeBoost", _AttitudeBoost)
AND
_AttitudeBoost > 0
AND
IntegerProduct(_AttitudeBoost, -1, _RemoveAttitude)
//IntegerSubtract(_Attitude, _AttitudeBoost, _RemoveAttitude)
THEN
CharacterAddAttitudeTowardsPlayer(_Trader, _Player, _RemoveAttitude);
//ChangeAttitude(_Trader, _Player, _RemoveAttitude);

IF
TradeEnds(_Player, _Trader)
AND
ObjectGetFlag(_Player, "LLBARTER_AttitudeBoostActive", 1)
THEN
ObjectClearFlag(_Player, "LLBARTER_AttitudeBoostActive");
SetVarInteger(_Player, "LLBARTER_AttitudeBoost", 0);
//END_REGION

//REGION SNEAK_TWEAKS
//The "One Sneak Solution" :)
IF
CharacterStatusApplied(_Player, "SNEAKING", _)
AND
CharacterIsControlled(_Player, 1)
AND
CharacterIsInCombat(_Player, 0)
AND
NOT UserGetFlag(_Player, "LLBARTER_SneakingTweaksDisabled", 1)
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
UserSetFlag(_Player, "LLBARTER_PartySneakEnabled", 0);
DB_LLBARTER_Temp_ApplyingPartySneak(_Player, _UserID);
IterateParty(_Player, "LLBARTER_OnIterate_ApplySneaking");
ProcObjectTimer(_Player, "LLBARTER_Timers_ResetApplyingPartySneakDatabase", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_Timers_ResetApplyingPartySneakDatabase")
AND
DB_LLBARTER_Temp_ApplyingPartySneak(_Player, _UserID)
THEN
NOT DB_LLBARTER_Temp_ApplyingPartySneak(_Player, _UserID);

IF
StoryEvent((CHARACTERGUID)_PartyMember, "LLBARTER_OnIterate_ApplySneaking")
AND
DB_LLBARTER_Temp_ApplyingPartySneak(_Player, _UserID)
AND
_PartyMember != _Player
AND
HasActiveStatus(_Player, "SNEAKING", 1)
AND
HasActiveStatus(_PartyMember, "SNEAKING", 0)
AND
CharacterIsInCombat(_PartyMember, 0)
AND
CharacterGetReservedUserID(_PartyMember, _UserID)
AND
CharactersAreGrouped(_Player, _PartyMember, 1)
THEN
ApplyStatus(_PartyMember, "SNEAKING", -1.0, 0, _Player);

IF
CrimeIsRegistered(_Victim, "PickPocketFailed", _, _, _Player, _, _, _)
AND
CharacterIsControlled(_Player, 1)
AND
UserGetFlag(_Player, "LLBARTER_PartySneakEnabled", 1)
THEN
DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player);

IF
CharacterSawSneakingCharacter(_Npc, _Player)
AND
CharacterIsControlled(_Player, 1)
AND
CharacterIsInCombat(_Player, 0)
AND
UserGetFlag(_Player, "LLBARTER_PartySneakEnabled", 1)
AND
CharacterIsAlly(_Npc, _Player, 0)
THEN
DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player);

IF
CharacterReceivedDamage(_Player, _, _)
AND
CharacterIsControlled(_Player, 1)
AND
CharacterIsInCombat(_Player, 0)
AND
HasActiveStatus(_Player, "SNEAKING", 1)
AND
UserGetFlag(_Player, "LLBARTER_PartySneakEnabled", 1)
THEN
DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player);

IF
CharacterStatusRemoved(_Player, "SNEAKING", _)
AND
ObjectGetFlag(_Player, "LLBARTER_SneakingRemovedByScript", 0)
AND
CharacterIsControlled(_Player, 1)
AND
CharacterIsInCombat(_Player, 0)
AND
UserGetFlag(_Player, "LLBARTER_PartySneakEnabled", 1)
THEN
ProcObjectTimer(_Player, "LLBARTER_OnSneakingRemoved_CheckConditions", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_OnSneakingRemoved_CheckConditions")
AND
NOT DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player)
THEN
LLBARTER_OnSneakingToggledOff(_Player);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_OnSneakingRemoved_CheckConditions")
AND
DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player)
THEN
NOT DB_LLBARTER_Temp_BlockPartySneakRemoval(_Player);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_OnSneakingRemoved_CheckConditions")
THEN
UserClearFlag(_Player, "LLBARTER_PartySneakEnabled", 0);

PROC
LLBARTER_OnSneakingToggledOff((CHARACTERGUID)_Player)
AND
CharacterGetReservedUserID(_Player, _UserID)
THEN
DB_LLBARTER_Temp_RemovingPartySneak(_Player, _UserID);
IterateParty(_Player, "LLBARTER_RemoveSneaking");
ProcObjectTimer(_Player, "LLBARTER_ResetRemovingPartySneakDatabase", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_ResetRemovingPartySneakDatabase")
AND
DB_LLBARTER_Temp_RemovingPartySneak(_Player, _UserID)
THEN
NOT DB_LLBARTER_Temp_RemovingPartySneak(_Player, _UserID);

IF
StoryEvent((CHARACTERGUID)_PartyMember, "LLBARTER_RemoveSneaking")
AND
DB_LLBARTER_Temp_RemovingPartySneak(_Player, _UserID)
AND
_PartyMember != _Player
AND
HasActiveStatus(_PartyMember, "SNEAKING", 1)
AND
CharacterIsInCombat(_PartyMember, 0)
AND
CharacterGetReservedUserID(_PartyMember, _UserID)
AND
CharactersAreGrouped(_Player, _PartyMember, 1)
THEN
ObjectSetFlag(_PartyMember, "LLBARTER_SneakingRemovedByScript");
RemoveStatus(_PartyMember, "SNEAKING");
ProcObjectTimer(_Player, "LLBARTER_Timers_ResetSneakingRemovedFlag", 250);
CharacterStatusText(_PartyMember, "<font color='#00FA9A' size='18'>Sneaking Toggled Off</font>");
//SetStoryEvent(_PartyMember, "LLBARTER_Commands_RemoveSneaking");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLBARTER_Timers_ResetSneakingRemovedFlag")
AND
ObjectGetFlag(_Player, "LLBARTER_SneakingRemovedByScript", 1)
THEN
ObjectClearFlag(_Player, "LLBARTER_SneakingRemovedByScript");
//END_REGION

//REGION PET_PAL
IF
CharacterUsedItemTemplate(_Character, "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", _Item)
AND
CharacterHasTalent(_Character, "AnimalEmpathy", 0)
AND
ObjectGetFlag(_Character, "LLBARTER_LearnedPetPal", 0)
AND
GetPosition(_Character, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LOOT_BackPack_A_6c70c298-aa29-418f-a659-f8e0b5f5fa60", _x, _y, _z, _Backpack)
THEN
ItemToInventory(_Item, _Backpack, 1, 0, 1);
ItemRemove(_Backpack);
CharacterAddTalent(_Character, "AnimalEmpathy");
ObjectSetFlag(_Character, "LLBARTER_LearnedPetPal");
PlayEffect(_Character, "LLBARTER_FX_PetPal_Learned_01", "Dummy_StatusFX");
CharacterStatusText(_Character, "LLBARTER_StatusText_PetPalLearned");

PROC
ProcBlockUseOfItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77")
AND
CharacterHasTalent(_Character, "AnimalEmpathy", 1)
THEN
CharacterStatusText(_Character, "LLBARTER_StatusText_PetPalAlreadyLearned");
DB_CustomUseItemResponse(_Character, _Item, 0);

//Triggered after the player respecs away their free PetPal talent point.
PROC
ProcBlockUseOfItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77")
AND
CharacterHasTalent(_Character, "AnimalEmpathy", 0)
AND
ObjectGetFlag(_Character, "LLBARTER_LearnedPetPal", 1)
THEN
CharacterStatusText(_Character, "LLBARTER_StatusText_PetPalLearningFailed");
DB_CustomUseItemResponse(_Character, _Item, 0);
//END_REGION

//REGION DEBUG

IF
GameModeStarted(_, 1)
AND
NOT DB_Origins(_)
THEN
DB_Origins((CHARACTERGUID)S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);

/*
IF
CharacterJoinedParty(_Character)
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterAttachToGroup(_Host, _Character);

IF
CharacterStatusAttempt(_Character, _Status, _Causee)
AND
StringConcatenate("Status attempt: ", _Status, _Str)
THEN
DebugBreak(_Str);

IF
CharacterStatusApplied(_Character, _Status, _Causee)
AND
StringConcatenate("Status applied: ", _Status, _Str)
THEN
DebugBreak(_Str);

IF
CharacterStatusApplied(_Character, "SNEAKING", _Causee)
AND
CharacterGetAbilityPoints(_Character, _AP)
AND
IntegertoString(_AP, _APStr)
AND
StringConcatenate("Sneaking applied. AP: ", _APStr, _Str)
THEN
DebugBreak(_Str);

IF
CharacterStatusRemoved(_Character, _Status, _Causee)
AND
StringConcatenate("Status removed: ", _Status, _Str)
THEN
DebugBreak(_Str);

IF
CharacterUsedSkill(_Character, _Skill, _, _)
AND
StringConcatenate("Used skill: ", _Skill, _Str)
THEN
DebugBreak(_Str);

IF
ObjectFlagSet(_Flag, _Character, _)
AND
StringConcatenate("Flag set: ", _Flag, _Str)
THEN
DebugBreak(_Str);

IF
ObjectFlagCleared(_Flag, _Character, _)
AND
StringConcatenate("Flag cleared: ", _Flag, _Str)
THEN
DebugBreak(_Str);
*/
//END_REGION

//REGION VERSIONING
IF
DB_LLBARTER_StoryStarted(1)
THEN
LLBARTER_Updater_SetVersion("1.0.0.7");

IF
GameStarted(_,_)
AND
LLBARTER_Updater_QRY_UpdateNeeded("1.0.0.7")
THEN
LLBARTER_Updater_RemoveOldVersions("1.0.0.7");
LLBARTER_Updater_SetVersion("1.0.0.7");

QRY
LLBARTER_Updater_QRY_UpdateNeeded((STRING)_Version)
AND
NOT DB_Mods_Registered("BarteringTweaks", "LaughingLeader", _Version)
THEN
DB_NOOP(1);

PROC
LLBARTER_Updater_RemoveOldVersions((STRING)_NewVersion)
AND
DB_Mods_Registered("BarteringTweaks", "LaughingLeader", _Version)
AND
_Version != _NewVersion
THEN
NOT DB_Mods_Registered("BarteringTweaks", "LaughingLeader", _Version);
LLBARTER_Updater_VersionChanged(_Version);

PROC
LLBARTER_Updater_SetVersion((STRING)_Version)
AND
GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
DB_LeaderLib_ModApi_RegisterMod("BarteringTweaks", "LaughingLeader", _Version);

PROC
LLBARTER_Updater_SetVersion((STRING)_Version)
AND
NOT GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
DB_Mods_Registered("BarteringTweaks", "LaughingLeader", _Version);
//END_REGION

//REGION LEADERLIB
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
NOT DB_LLBARTER_RegisteredLeaderLibSettings(_)
THEN
DB_LLBARTER_RegisteredLeaderLibSettings(1);

IF
DB_LLBARTER_RegisteredLeaderLibSettings(1)
THEN
DB_LeaderLib_ModApi_RegisterActiveGoal("BarteringTweaks", "LaughingLeader", "LaughingLeader_BarteringTweaks");
DB_LeaderLib_ModApi_RegisterMenu("LaughingLeader.BarteringTweaks", "[Bartering Tweaks] Settings", "LLBARTER_SettingsMenu", "BarteringTweaks", "LaughingLeader");
DB_LeaderLib_Treasure_TreasureItemTemplates("LeaderLib.LeaderTrader.ModBooks", "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", 4, "");
DB_LeaderLib_Treasure_ItemMaxAmount("LeaderLib.LeaderTrader.ModBooks", "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", 4);

PROC
LLBARTER_Updater_VersionChanged((STRING)_OldVersion)
AND
_OldVersion == "1.0.0.0"
AND
NOT DB_LeaderLib_Treasure_TreasureItemTemplates("LeaderLib.LeaderTrader.ModBooks", "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", _, _)
THEN
DB_LeaderLib_Treasure_TreasureItemTemplates("LeaderLib.LeaderTrader.ModBooks", "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", 4, "");
DB_LeaderLib_Treasure_ItemMaxAmount("LeaderLib.LeaderTrader.ModBooks", "BOOK_LLBARTER_PetPal_6d71b1e0-4150-47fe-bc77-83d9b3efcb77", 4);
//END_REGION
EXITSECTION

ENDEXITSECTION
